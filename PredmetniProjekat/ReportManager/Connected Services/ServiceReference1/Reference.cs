//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportManager.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmData", Namespace="http://schemas.datacontract.org/2004/07/CoreService")]
    [System.SerializableAttribute()]
    public partial class AlarmData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagData", Namespace="http://schemas.datacontract.org/2004/07/CoreService")]
    [System.SerializableAttribute()]
    public partial class TagData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagId {
            get {
                return this.TagIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TagIdField, value) != true)) {
                    this.TagIdField = value;
                    this.RaisePropertyChanged("TagId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IReportManagerService")]
    public interface IReportManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/AlarmsFromToDate", ReplyAction="http://tempuri.org/IReportManagerService/AlarmsFromToDateResponse")]
        ReportManager.ServiceReference1.AlarmData[] AlarmsFromToDate(string start, string end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/AlarmsFromToDate", ReplyAction="http://tempuri.org/IReportManagerService/AlarmsFromToDateResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.AlarmData[]> AlarmsFromToDateAsync(string start, string end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/ByPriority", ReplyAction="http://tempuri.org/IReportManagerService/ByPriorityResponse")]
        ReportManager.ServiceReference1.AlarmData[] ByPriority(int priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/ByPriority", ReplyAction="http://tempuri.org/IReportManagerService/ByPriorityResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.AlarmData[]> ByPriorityAsync(int priority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/ValuesFromToDate", ReplyAction="http://tempuri.org/IReportManagerService/ValuesFromToDateResponse")]
        ReportManager.ServiceReference1.TagData[] ValuesFromToDate(string start, string end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/ValuesFromToDate", ReplyAction="http://tempuri.org/IReportManagerService/ValuesFromToDateResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagData[]> ValuesFromToDateAsync(string start, string end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/AIValues", ReplyAction="http://tempuri.org/IReportManagerService/AIValuesResponse")]
        ReportManager.ServiceReference1.TagData[] AIValues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/AIValues", ReplyAction="http://tempuri.org/IReportManagerService/AIValuesResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagData[]> AIValuesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/DIValues", ReplyAction="http://tempuri.org/IReportManagerService/DIValuesResponse")]
        ReportManager.ServiceReference1.TagData[] DIValues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/DIValues", ReplyAction="http://tempuri.org/IReportManagerService/DIValuesResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagData[]> DIValuesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/ValuesById", ReplyAction="http://tempuri.org/IReportManagerService/ValuesByIdResponse")]
        ReportManager.ServiceReference1.TagData[] ValuesById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportManagerService/ValuesById", ReplyAction="http://tempuri.org/IReportManagerService/ValuesByIdResponse")]
        System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagData[]> ValuesByIdAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportManagerServiceChannel : ReportManager.ServiceReference1.IReportManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportManagerServiceClient : System.ServiceModel.ClientBase<ReportManager.ServiceReference1.IReportManagerService>, ReportManager.ServiceReference1.IReportManagerService {
        
        public ReportManagerServiceClient() {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ReportManager.ServiceReference1.AlarmData[] AlarmsFromToDate(string start, string end) {
            return base.Channel.AlarmsFromToDate(start, end);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.AlarmData[]> AlarmsFromToDateAsync(string start, string end) {
            return base.Channel.AlarmsFromToDateAsync(start, end);
        }
        
        public ReportManager.ServiceReference1.AlarmData[] ByPriority(int priority) {
            return base.Channel.ByPriority(priority);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.AlarmData[]> ByPriorityAsync(int priority) {
            return base.Channel.ByPriorityAsync(priority);
        }
        
        public ReportManager.ServiceReference1.TagData[] ValuesFromToDate(string start, string end) {
            return base.Channel.ValuesFromToDate(start, end);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagData[]> ValuesFromToDateAsync(string start, string end) {
            return base.Channel.ValuesFromToDateAsync(start, end);
        }
        
        public ReportManager.ServiceReference1.TagData[] AIValues() {
            return base.Channel.AIValues();
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagData[]> AIValuesAsync() {
            return base.Channel.AIValuesAsync();
        }
        
        public ReportManager.ServiceReference1.TagData[] DIValues() {
            return base.Channel.DIValues();
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagData[]> DIValuesAsync() {
            return base.Channel.DIValuesAsync();
        }
        
        public ReportManager.ServiceReference1.TagData[] ValuesById(string id) {
            return base.Channel.ValuesById(id);
        }
        
        public System.Threading.Tasks.Task<ReportManager.ServiceReference1.TagData[]> ValuesByIdAsync(string id) {
            return base.Channel.ValuesByIdAsync(id);
        }
    }
}
